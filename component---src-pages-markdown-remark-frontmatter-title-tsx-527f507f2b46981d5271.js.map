{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-title-tsx-527f507f2b46981d5271.js","mappings":"iOASMA,EAAcC,EAAAA,QAAAA,OAAAA,WAAH,+DAAGA,CAAH,8yBAGbC,EAAAA,EAAAA,IAAgB,MAAD,uCACfA,EAAAA,EAAAA,IAAgB,SAAD,qBACfA,EAAAA,EAAAA,IAAgB,SAAD,qBACfA,EAAAA,EAAAA,IAAgB,UAAD,qBACfA,EAAAA,EAAAA,IAAgB,eAAD,qBAOdA,EAAAA,EAAAA,IAAgB,MAAD,qBACfA,EAAAA,EAAAA,IAAgB,SAAD,qBACfA,EAAAA,EAAAA,IAAgB,SAAD,qBACfA,EAAAA,EAAAA,IAAgB,UAAD,qBACfA,EAAAA,EAAAA,IAAgB,eAAD,qBAYd,SAACC,GAAD,OAA+BA,EAAMC,OAAND,QAAAA,aAejCD,EAAAA,EAAAA,IAAgB,MAAD,uBACfA,EAAAA,EAAAA,IAAgB,UAAD,uBACfA,EAAAA,EAAAA,IAAgB,eAAD,uBAIJ,SAACC,GAAD,OAA+BA,EAAMC,OAAND,UAAAA,WACpC,SAACA,GAAD,OAA+BA,EAAMC,OAAND,QAAAA,aAYnCE,EAASJ,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,gDAuBZ,EAVe,SAAC,GAAyD,IAAvDK,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,KAAMH,EAAyC,EAAzCA,OAAQI,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAC7C,OACCC,EAAAA,cAAAA,EAAAA,SAAAA,KACCA,EAAAA,cAACV,EAAD,CAAaI,OAAQA,EAAQO,UAAWJ,GACvCG,EAAAA,cAACL,EAAD,KAASG,GADV,IAC2BF,EAD3B,IACkCI,EAAAA,cAACL,EAAD,KAASI,M,UCnFxCG,EAAgBX,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,sBAIJ,SAASY,IACvB,IAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACCL,EAAAA,cAAAA,EAAAA,SAAAA,KACCA,EAAAA,cAAAA,IAAAA,CAAGM,KAAMF,EAAKG,KAAKC,aAAaC,WAC/BT,EAAAA,cAACU,EAAD,CAAQd,MAAM,YAAYE,MAAM,IAAIC,MAAM,IAAIF,KAAK,QAEpDG,EAAAA,cAACE,EAAD,KACCF,EAAAA,cAAAA,IAAAA,CAAGM,KAAM,6DAA8DK,OAAO,WAC7EX,EAAAA,cAACY,EAAAA,EAAD,CAAaC,IAAI,wBAAwBC,IAAI,cAA7C,uBAEDd,EAAAA,cAAAA,IAAAA,CAAGM,KAAM,iEAAkEK,OAAO,WACjFX,EAAAA,cAACY,EAAAA,EAAD,CAAaC,IAAI,yBAAyBC,IAAI,YAA9C,2B,8DCJCC,E,QAAcxB,QAAAA,IAAAA,WAAH,yFAAGA,CAAH,2QAiCjB,UAba,SAAC,GAAqB,IAAnBa,EAAkB,EAAlBA,KACf,OACCJ,EAAAA,cAACgB,EAAAA,EAAD,KACEhB,EAAAA,cAACe,EAAD,CACCE,wBAAyB,CACxBC,OAAQd,EAAKe,QAAQC,QAGW,WAAlChB,EAAKe,QAAQE,YAAYzB,OAAsBI,EAAAA,cAACG,EAAAA,EAAD,S","sources":["webpack://gatsby-starter-typescript-jest/./src/components/button/button.tsx","webpack://gatsby-starter-typescript-jest/./src/components/button/orderButton.tsx","webpack://gatsby-starter-typescript-jest/./src/pages/{MarkdownRemark.frontmatter__title}.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { mixinMediaQuery } from '../layout/global';\n\ninterface IKhoraButtonProps {\n\tinvert?: boolean;\n\tclassName: string;\n}\n\nconst KhoraButton = styled.button`\n\t&.lg {\n\t\tfont-family: 'ArcadeClassic';\n\t\t${mixinMediaQuery(`xxs`, `--btn-width: 98%; font-size: 1.4em`)}\n\t\t${mixinMediaQuery(`mobile`, `--btn-width: 95%`)}\n\t\t${mixinMediaQuery(`tablet`, `--btn-width: 85%`)}\n\t\t${mixinMediaQuery(`desktop`, `--btn-width: 70%`)}\n\t\t${mixinMediaQuery(`largeDesktop`, `--btn-width: 40%`)}\n\t\t--btn-height: 60px;\n\t\t--btn-font-size: 2.2em;\n\t\tbox-shadow: 1px 15px 12px -15px #000000;\n\t\ttransition: all 0.2s;\n\t\t&:hover {\n\t\t\tbox-shadow: none;\n\t\t\t${mixinMediaQuery(`xxs`, `--btn-width: 96%`)}\n\t\t\t${mixinMediaQuery(`mobile`, `--btn-width: 95%`)}\n\t\t\t${mixinMediaQuery(`tablet`, `--btn-width: 85%`)}\n\t\t\t${mixinMediaQuery(`desktop`, `--btn-width: 70%`)}\n\t\t\t${mixinMediaQuery(`largeDesktop`, `--btn-width: 39%`)}\n\t\t}\n\t\t&:before,\n\t\t&:after {\n\t\t\tcontent: '';\n\t\t\tz-index: 1;\n\t\t\tposition: absolute;\n\t\t\ttop: calc(var(--btn-height) / -2);\n\t\t\twidth: 0;\n\t\t\theight: 0;\n\t\t\tborder-style: solid;\n\t\t\tborder-color: transparent\n\t\t\t\t${(props: IKhoraButtonProps) => (props.invert ? `white` : `#fc3638`)} transparent\n\t\t\t\ttransparent;\n\t\t}\n\t\t&:before {\n\t\t\tborder-width: var(--btn-height) 17px var(--btn-height) 0;\n\t\t\ttransform: rotate(180deg);\n\t\t\tleft: -1px;\n\t\t}\n\t\t&:after {\n\t\t\tborder-width: var(--btn-height) 17px var(--btn-height) 0;\n\t\t\tright: -1px;\n\t\t}\n\t}\n\t&.sm {\n\t\tfont-family: 'ArcadeClassic';\n\t\t${mixinMediaQuery(`xxs`, `--btn-width: 120px`)}\n\t\t${mixinMediaQuery(`desktop`, `--btn-width: 130px`)}\n\t\t${mixinMediaQuery(`largeDesktop`, `--btn-width: 140px`)}\n\t\t--btn-height: 50px;\n\t\t--btn-font-size: 85%;\n\t}\n\tbackground: ${(props: IKhoraButtonProps) => (props.invert ? `#fc3638` : `white`)};\n\tcolor: ${(props: IKhoraButtonProps) => (props.invert ? `white` : `#fc3638`)};\n\tborder: none;\n\tposition: relative;\n\tcursor: pointer;\n\theight: var(--btn-height);\n\twidth: var(--btn-width);\n\tfont-size: var(--btn-font-size);\n\t&:focus {\n\t\toutline: none;\n\t}\n`;\n\nconst Symbol = styled.div`\n\tfont-family: 'KhoraSymbols';\n\tdisplay: inline;\n`;\n\ninterface IButtonProps {\n\ttitle: string;\n\tsize?: `sm` | `lg`;\n\tinvert?: boolean;\n\ticonL?: string;\n\ticonR?: string;\n}\n\nconst Button = ({ title, size, invert, iconL, iconR }: IButtonProps) => {\n\treturn (\n\t\t<>\n\t\t\t<KhoraButton invert={invert} className={size}>\n\t\t\t\t<Symbol>{iconL}</Symbol> {title} <Symbol>{iconR}</Symbol>\n\t\t\t</KhoraButton>\n\t\t</>\n\t);\n};\n\nexport default Button;\n","import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Button from './button';\nimport styled from 'styled-components';\nimport { StaticImage } from 'gatsby-plugin-image';\n\n\nconst LogoContainer = styled.div`\n\tmargin-top: 20px;\n`;\n\nexport default function OrderButton() {\n\tconst data = useStaticQuery(graphql`\n\t\tquery HeaderQuery {\n\t\t\tsite {\n\t\t\t\tsiteMetadata {\n\t\t\t\t\torderLink\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\treturn (\n\t\t<>\n\t\t\t<a href={data.site.siteMetadata.orderLink}>\n\t\t\t\t<Button title=\"Order now\" iconL=\"B\" iconR=\"B\" size=\"lg\" />\n\t\t\t</a>\n\t\t\t<LogoContainer>\n\t\t\t\t<a href={'https://play.google.com/store/apps/details?id=fr.coopcycle'} target=\"__blank\">\n\t\t\t\t\t<StaticImage src=\"../../images/play.png\" alt=\"Google Play\" />\n\t\t\t\t</a>\n\t\t\t\t<a href={'https://apps.apple.com/us/app/coopcycle/id1324884530?l=fr&ls=1'} target=\"__blank\">\n\t\t\t\t\t<StaticImage src=\"../../images/apple.png\" alt=\"App Store\" />\n\t\t\t\t</a>\n\t\t\t</LogoContainer>\n\t\t</>\n\t);\n}\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout/layout';\nimport OrderButton from '../components/button/orderButton';\nimport styled from 'styled-components';\n\ninterface IPage {\n\tdata: {\n\t\tcontent: {\n\t\t\thtml: string;\n\t\t\tfrontmatter: {\n\t\t\t\ttitle: string;\n\t\t\t};\n\t\t};\n\t};\n}\n\nexport const query = graphql`\n\tquery($id: String) {\n\t\tcontent: markdownRemark(id: { eq: $id }) {\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t}\n\t\t\thtml\n\t\t}\n\t}\n`;\n\nconst LeftAligned = styled.div`\n\t@media only screen and (max-width: 500px) {\n\t\twidth: 85%;\n\t}\n\t@media only screen and (min-width: 500px) {\n\t\twidth: 80%;\n\t}\n\t@media only screen and (min-width: 600px) {\n\t\twidth: 60%;\n\t}\n\t@media only screen and (min-width: 1200px) {\n\t\twidth: 40%;\n\t}\n\tmargin: 0 auto 20px auto;\n\ttext-align: left;\n\tp {\n\t\tmargin: 0;\n\t}\n`;\n\nconst Page = ({ data }: IPage) => {\n\treturn (\n\t\t<Layout>\n\t\t\t\t<LeftAligned\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: data.content.html,\n\t\t\t\t\t}}\n\t\t\t\t></LeftAligned>\n\t\t\t{data.content.frontmatter.title == 'contact' && <OrderButton />}\n\t\t</Layout>\n\t);\n};\n\nexport default Page;\n"],"names":["KhoraButton","styled","mixinMediaQuery","props","invert","Symbol","title","size","iconL","iconR","React","className","LogoContainer","OrderButton","data","useStaticQuery","href","site","siteMetadata","orderLink","Button","target","StaticImage","src","alt","LeftAligned","Layout","dangerouslySetInnerHTML","__html","content","html","frontmatter"],"sourceRoot":""}